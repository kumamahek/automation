Cypress.Commands.add('getMaildropOtp', (mailboxName) => {
  const getInboxQuery = {
    operationName: 'GetInbox',
    variables: {
      mailbox: mailboxName,
    },
    query: `
      query GetInbox($mailbox: String!) {
        ping(message: "Test")
        inbox(mailbox: $mailbox) {
          id
          from
          subject
          preview
          date
        }
      }
    `,
  };

  return cy.request({
    method: 'POST',
    url: 'https://api.maildrop.cc/graphql',
    headers: {
      'Content-Type': 'application/json',
    },
    body: getInboxQuery,
    failOnStatusCode: false, // Optional: Set to false if you want to debug 400s
  }).then((response) => {
    if (response.status !== 200) {
      throw new Error(`❌ Maildrop API request failed: ${response.status}`);
    }

    const inbox = response.body.data?.inbox;
    if (!inbox || inbox.length === 0) {
      throw new Error('❌ No messages found in inbox');
    }

    const messageId = inbox[0].id;

    const getMessageQuery = {
      operationName: 'GetMessage',
      variables: {
        mailbox: mailboxName,
        id: messageId,
      },
      query: `
        query GetMessage($mailbox: String!, $id: String!) {
          message(mailbox: $mailbox, id: $id) {
            body
          }
        }
      `,
    };

    return cy.request({
      method: 'POST',
      url: 'https://api.maildrop.cc/graphql',
      headers: {
        'Content-Type': 'application/json',
      },
      body: getMessageQuery,
    });
  }).then((response) => {
    const body = response.body.data.message.body;
    const otpMatch = body.match(/\b\d{6}\b/);
    if (!otpMatch) {
      throw new Error('❌ OTP not found in message body');
    }

    const otp = otpMatch[0];
    cy.log(`✅ OTP Found: ${otp}`);
    return cy.wrap(otp);
  });
});
